
services:
  # --------- PostgreSQL Service ---------
  db:
    image: postgres:16
    container_name: postgres_db
    environment:
      POSTGRES_DB: ionic
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # --------- Django Backend Service ---------
  backend:
    build: ./backend
    container_name: Connectify_backend
    command: ["./wait-for-postgres.sh", "db", "python", "manage.py", "runserver", "0.0.0.0:8000"]
    volumes:
      - ./backend:/apps
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy

  # --------- React Frontend Service ---------
  frontend:
    build: ./frontend
    container_name: Connectify_frontend
    command: npm start
    volumes:
      - ./frontend:/app:cached
      # - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend

# --------- Volumes ---------
volumes:
  postgres_data:
